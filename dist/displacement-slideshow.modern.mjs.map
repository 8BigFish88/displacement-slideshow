{"version":3,"file":"displacement-slideshow.modern.mjs","sources":["../src/displacement-slideshow.js"],"sourcesContent":["import * as THREE from 'three';\nimport { gsap } from \"gsap\";\n\nexport default function (opts) {\n\n  var vertex = `\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n\n  var fragment = `\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform float dpr;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\nuniform vec4 res;\nuniform vec2 parent;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n\n  vec2 uv = 0.5 * gl_FragCoord.xy / (res.xy) ;\n  vec2 myUV = (uv - vec2(0.5))*res.zw + vec2(0.5);\n\n\n  vec2 distortedPosition1 = myUV + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = myUV + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n`;\n\n  // please respect authorship and do not remove\n  console.log('%c Hover effect by Robin Delaporte: https://github.com/robin-dela/hover-effect ', 'color: #bada55; font-size: 0.8rem');\n\n\n  function firstDefined() {\n    for (var i = 0; i < arguments.length; i++) {\n      if (arguments[i] !== undefined) return arguments[i];\n    }\n  }\n\n  var parent = opts.parent;\n  var dispImage = opts.displacementImage;\n  var image1 = opts.image1;\n  var image2 = opts.image2;\n  var images =  firstDefined(opts.images,[opts.image1,opts.image2]);\n  var imagesRatio = firstDefined(opts.imagesRatio, 1.0);\n  var intensity1 = firstDefined(opts.intensity1, opts.intensity, 1);\n  var intensity2 = firstDefined(opts.intensity2, opts.intensity, 1);\n  var commonAngle = firstDefined(opts.angle, Math.PI / 4); // 45 degrees by default, so grayscale images work correctly\n  var angle1 = firstDefined(opts.angle1, commonAngle);\n  var angle2 = firstDefined(opts.angle2, -commonAngle * 3);\n  var easing = firstDefined(opts.easing, \"power1.inOut\");\n  var speedIn = firstDefined(opts.speedIn, opts.speed, 1.6);\n  var speedOut = firstDefined(opts.speedOut, opts.speed, 1.2);\n  var transitionDelay = firstDefined(opts.transitionDelay, 3000);\n\n  var currentImage = 0;\n  var nextImage = 1;\n  var mat = undefined;\n  var object = undefined;\n  var geometry = undefined;\n  var texture1 = null;\n  var texture2 = null;\n  var textures = [];\n  var disp = null;\n  var loader = null;\n  var slideshowId = null;\n\n  if (!parent) {\n    console.warn('Parent missing');\n    return;\n  }\n\n  if (!((images || (image1 && image2)) && dispImage)) {\n    console.warn('One or more images are missing');\n    return;\n  }\n\n  var scene = new THREE.Scene();\n  var camera = new THREE.OrthographicCamera(\n      parent.offsetWidth / -2,\n      parent.offsetWidth / 2,\n      parent.offsetHeight / 2,\n      parent.offsetHeight / -2,\n      1,\n      1000\n  );\n\n  var renderer = new THREE.WebGLRenderer({\n    antialias: false,\n    alpha: true\n  });\n\n  var imageAspect = imagesRatio;\n\n  var render = function () {\n    // This will be called by the TextureLoader as well as gsap.\n    renderer.render(scene, camera);\n  };\n\n  function setLoader() {\n    loader = new THREE.TextureLoader();\n    loader.crossOrigin = '';\n  }\n\n  function setDisplacement() {\n    disp = loader.load(dispImage, render);\n    disp.magFilter = disp.minFilter = THREE.LinearFilter;\n  }\n\n  function setMaterial() {\n    mat = new THREE.ShaderMaterial({\n      uniforms: {\n        intensity1: {\n          type: 'f',\n          value: intensity1\n        },\n        intensity2: {\n          type: 'f',\n          value: intensity2\n        },\n        dispFactor: {\n          type: 'f',\n          value: 0.0\n        },\n        angle1: {\n          type: 'f',\n          value: angle1\n        },\n        angle2: {\n          type: 'f',\n          value: angle2\n        },\n        texture1: {\n          type: 't',\n          value: texture1\n        },\n        texture2: {\n          type: 't',\n          value: texture2\n        },\n        disp: {\n          type: 't',\n          value: disp\n        },\n        res: {\n          type: 'vec4',\n          value: new THREE.Vector4(parent.offsetWidth, parent.offsetHeight, a1, a2)\n        },\n        dpr: {\n          type: 'f',\n          value: window.devicePixelRatio\n        }\n      },\n\n      vertexShader: vertex,\n      fragmentShader: fragment,\n      transparent: true,\n      opacity: 1.0,\n    });\n  }\n\n  function setMaterialForNextTransition() {\n    mat.uniforms.texture1.value = texture1;\n    mat.uniforms.texture2.value = texture2;\n    mat.uniforms.dispFactor.value = 0;\n  }\n\n  function setScene() {\n    scene = new THREE.Scene();\n    geometry = new THREE.PlaneBufferGeometry(parent.offsetWidth, parent.offsetHeight, 1);\n    object = new THREE.Mesh(geometry, mat);\n    scene.add(object);\n  }\n\n  function transitionIn() {\n    gsap.to(mat.uniforms.dispFactor,  {\n      duration: speedIn,\n      value: 1,\n      ease: easing,\n      onUpdate: render,\n      onComplete: render,\n    });\n  }\n\n  function transitionOut() {\n    gsap.to(mat.uniforms.dispFactor, {\n      duration: speedOut,\n      value: 0,\n      ease: easing,\n      onUpdate: render,\n      onComplete: render\n    });\n  }\n\n  function playSlideshow() {\n    loadTexturesAllImages();\n    var index = 0\n    setImage(index)\n    slideshowId = setInterval(() => {\n      transitionIn()\n      index = nextImage\n      setImage(index)\n      texture1 = textures[index].texture1;\n      texture2 = textures[index].texture2;\n      setMaterialForNextTransition()\n    }, transitionDelay);\n    return slideshowId;\n  }\n\n  function stopSlideshow() {\n    slideshowId && clearInterval(slideshowId);\n  }\n\n  function setImage(index) {\n    currentImage = index\n    nextImage = (index == (images.length - 1)) ? 0 : (index + 1)\n  }\n\n\n  function loadTexturesAllImages() {\n    textures = images.map((image, currentIndex) => {\n      const nextImageIndex = (currentIndex == (images.length - 1)) ? 0 : (currentIndex + 1)\n\n      texture1 = texture2 || loader.load(image, render);\n      texture2 = loader.load(images[nextImageIndex], render);\n\n      texture1.magFilter = texture2.magFilter = THREE.LinearFilter;\n      texture1.minFilter = texture2.minFilter = THREE.LinearFilter;\n\n      return {\n        currentIndex,\n        texture1,\n        texture2\n      }\n    })\n\n\n  }\n\n  function loadTexturesImages() {\n    texture1 = texture2 || loader.load(images[currentImage], render);\n    texture2 = loader.load(images[nextImage], render);\n\n    texture1.magFilter = texture2.magFilter = THREE.LinearFilter;\n    texture1.minFilter = texture2.minFilter = THREE.LinearFilter;\n  }\n\n  camera.position.z = 1;\n\n  renderer.setPixelRatio(2.0);\n  renderer.setClearColor(0xffffff, 0.0);\n  renderer.setSize(parent.offsetWidth, parent.offsetHeight);\n  parent.appendChild(renderer.domElement);\n\n  let a1, a2;\n  if (parent.offsetHeight / parent.offsetWidth < imageAspect) {\n    a1 = 1;\n    a2 = parent.offsetHeight / parent.offsetWidth / imageAspect;\n  } else {\n    a1 = (parent.offsetWidth / parent.offsetHeight) * imageAspect;\n    a2 = 1;\n  }\n\n  setLoader()\n\n  setDisplacement()\n\n  loadTexturesImages();\n\n  setMaterial();\n\n  setScene()\n\n  window.addEventListener('resize', function (e) {\n    if (parent.offsetHeight / parent.offsetWidth < imageAspect) {\n      a1 = 1;\n      a2 = parent.offsetHeight / parent.offsetWidth / imageAspect;\n    } else {\n      a1 = (parent.offsetWidth / parent.offsetHeight) * imageAspect;\n      a2 = 1;\n    }\n    object.material.uniforms.res.value = new THREE.Vector4(parent.offsetWidth, parent.offsetHeight, a1, a2);\n    renderer.setSize(parent.offsetWidth, parent.offsetHeight);\n\n    render()\n  });\n\n  this.next = transitionIn;\n  this.playSlideshow = playSlideshow;\n  this.stopSlideshow = stopSlideshow;\n  this.previous = transitionOut;\n};\n\n"],"names":["opts","firstDefined","i","arguments","length","undefined","console","log","geometry","parent","dispImage","displacementImage","image1","image2","images","imagesRatio","intensity1","intensity","intensity2","commonAngle","angle","Math","PI","angle1","angle2","easing","speedIn","speed","speedOut","transitionDelay","currentImage","nextImage","mat","object","texture1","texture2","textures","disp","loader","slideshowId","warn","scene","THREE","Scene","camera","OrthographicCamera","offsetWidth","offsetHeight","WebGLRenderer","antialias","alpha","imageAspect","render","renderer","transitionIn","gsap","to","uniforms","dispFactor","duration","value","ease","onUpdate","onComplete","setImage","index","a1","a2","position","z","setPixelRatio","setClearColor","setSize","appendChild","domElement","TextureLoader","crossOrigin","load","magFilter","minFilter","LinearFilter","ShaderMaterial","type","res","Vector4","dpr","window","devicePixelRatio","vertexShader","fragmentShader","transparent","opacity","PlaneBufferGeometry","Mesh","add","addEventListener","e","material","this","next","playSlideshow","map","image","currentIndex","nextImageIndex","setInterval","stopSlideshow","clearInterval","previous"],"mappings":"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"}